{"version":3,"sources":["types/types.js","reducers/plantsReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","configuration/firebase-config.js","hooks/useForm.js","actions/ui.js","actions/auth.js","screens/Login.js","screens/Register.js","routers/RouteAuth.js","routers/RoutePrivate.js","helpers/loadPlants.js","helpers/fileUpload.js","actions/plants.js","components/administration/Entry.js","components/administration/Entries.js","img/icon.png","components/administration/Sidebar.js","components/administration/NothingSelected.js","components/plant/Plant.js","screens/Administration.js","routers/RoutePublic.js","routers/RouteApp.js","App.js","reportWebVitals.js","index.js"],"names":["types","initialState","plants","active","plantsReducer","state","action","type","payload","map","plant","id","filter","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","uid","name","displayName","ui","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","useForm","useState","values","setValues","reset","handleInputChange","target","value","setError","err","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","catch","e","console","log","Swal","fire","message","logout","Login","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","htmlFor","placeholder","autoComplete","onChange","disabled","to","onClick","signInWithPopup","Register","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","RouteAuth","exact","path","component","RoutePrivate","isAuthenticated","Component","rest","props","loadPlants","collection","get","plantsSnap","forEach","snapChild","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activePlant","addNewPlant","setPlants","startSavePlant","getState","url","plantToFirestore","doc","update","refreshPlant","title","deletePlant","Entry","date","description","plantDate","moment","style","backgroundImage","format","Entries","Sidebar","showSideBar","setShowSidebar","class","aria-label","fill","stroke","stroke-linecap","stroke-linejoin","stroke-width","viewBox","d","src","Logo","alt","newPlant","Date","getTime","add","color","signOut","NothingSelected","size","Plant","activeId","useRef","useEffect","current","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","delete","startDeleting","Administration","RoutePublic","RouteApp","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d705b7d.chunk.js","sourcesContent":["export const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    plantsAddNew: '[Plants] New plant',\n    plantsActive: '[Plants] Set active plant',\n    plantsLoad: '[Plants] Load plants',\n    plantsUpdated: '[Plants] Updated plant',\n    plantsFileUrl: '[Plants] Updated image url',\n    plantsDelete: '[Plants] Delete plant',\n    plantsLogoutCleaning: '[Plants] Logout Cleaning',\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    plants: [],\n    active: null\n}\n\n\nconst plantsReducer = ( state = initialState, action ) => {\n\n    switch (action.type) {\n        \n        case types.plantsActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        \n        case  types.plantsAddNew:\n            return {\n                ...state,\n                plants: [ action.payload, ...state.plants ]\n            }\n\n        case types.plantsLoad:\n            return {\n                ...state,\n                plants: [ ...action.payload ]\n            }\n    \n        case types.plantsUpdated:\n            return {\n                ...state,\n                plants: state.plants.map(\n                    plant => plant.id === action.payload.id\n                        ? action.payload.plant\n                        : plant\n                )\n            }\n\n        case types.plantsDelete:\n            return {\n                ...state,\n                active: null,\n                plants: state.plants.filter( plant => plant.id !== action.payload )\n            } \n\n        case types.plantsLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                plants: []\n            }\n\n        default:\n            return state\n    }\n\n\n}\n\nexport default plantsReducer;","import { types } from '../types/types';\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n\n        case types.uiRemoveError:\n                return {\n                    ...state,\n                    msgError: null\n                }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n \n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport plantsReducer from '../reducers/plantsReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    plants: plantsReducer\n});\n\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { types } from '../types/types';\n\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n        case types.logout:\n                return { }\n    \n        default:\n            return state;\n    }\n\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDE1u3F-LsVZGwJZOmzrmpmUqMPI4T9UtY\",\n  authDomain: \"dbplant-d625d.firebaseapp.com\",\n  databaseURL: \"https://dbplant-d625d.firebaseio.com\",\n  projectId: \"dbplant-d625d\",\n  storageBucket: \"dbplant-d625d.appspot.com\",\n  messagingSenderId: \"855193852221\",\n  appId: \"1:855193852221:web:21f910351e634741384d54\",\n  measurementId: \"G-SVXZRCLK0C\"\n};\n  \nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\n \nexport {\n    db,\n    googleAuthProvider,\n    facebookAuthProvider,\n    firebase\n}","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import { types } from '../types/types';\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n})\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n})\n\n","import Swal from 'sweetalert2';\n\nimport { firebase, googleAuthProvider, facebookAuthProvider } from '../configuration/firebase-config';\nimport { types } from '../types/types';\nimport { startLoading, finishLoading } from './ui';\n\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n\n        dispatch( startLoading() );\n        \n        \n        firebase.auth().signInWithEmailAndPassword( email, password )\n            .then( ({ user }) => {\n                dispatch(login( user.uid, user.displayName ));\n\n                dispatch( finishLoading() );\n            })\n            .catch( e => {\n                console.log(e);\n                dispatch( finishLoading() );\n                Swal.fire('Error', e.message, 'error');\n            })\n\n        \n        \n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\n    return ( dispatch ) => {\n\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async({ user }) => {\n\n                await user.updateProfile({ displayName: name });\n\n                dispatch(\n                    login( user.uid, user.displayName )\n                );\n            })\n            .catch( e => {\n                console.log(e);\n                Swal.fire('Error', e.message, 'error');\n            })\n\n    }\n}\n\n\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch(\n                    login( user.uid, user.displayName )\n                )\n            });\n\n    }\n}\n\nexport const startFacebookLogin = () => {\n    return ( dispatch ) => {\n\n        firebase.auth().signInWithPopup( facebookAuthProvider )\n            .then( ({ user }) => {\n                dispatch(\n                    login( user.uid, user.displayName )\n                )\n            });\n\n    }\n}\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n});\n\n\nexport const startLogout = () => {\n    return async( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n    }\n}\n\n\nexport const logout = () => ({\n    type: types.logout\n})\n\n\n","import React from 'react';\nimport { useForm } from '../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startLoginEmailPassword, startGoogleLogin, startFacebookLogin } from '../actions/auth';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { loading } = useSelector(state => state.ui);\n\n  const [formValues, handleInputChange] = useForm({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLoginEmailPassword(email, password));\n  }\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  }\n\n  const handleFacebookLogin = () => {\n    dispatch(startFacebookLogin());\n  }\n\n  return (\n    <div className=\"flex h-screen\">\n      <div className=\"w-full max-w-sm m-auto shadow-md\">\n        <h1 className=\"text-center text-2xl text-black font light\">Iniciar Sesión</h1>\n        <form className=\"bg-white rounded px-8 pt-6 pb-8 mb-4\" onSubmit={handleLogin}>\n          <div className=\"mb-4\">\n            <label className=\"block text-gray-300 text-sm font-bold mb-2\" htmlFor=\"email\">\n              Email\n              </label>\n            <input\n              className=\"appearance-none border-0 border-b rounded-none border-gray-300 w-full py-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"Ingrese email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              value={email}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-gray-300 text-sm font-bold mb-2\" htmlFor=\"password\">\n              Password\n              </label>\n            <input\n              className=\"appearance-none border-0 border-b rounded-none border-gray-300 w-full py-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"Ingrese password\"\n              name=\"password\"\n              value={password}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"submit\"\n              disabled={loading}\n              className=\"bg-gradient-to-r from-green-400 via-green-500 to-green-500 rounded w-full mt-5 p-2 text-white capitalize hover:cursor-pointer\"\n              value=\"Iniciar Sesión\"\n            />\n          </div>\n          <Link\n            to=\"/auth/register\"\n            className=\"text-gray-700 text-xs underline\"\n          >\n            Registrarse\n            </Link>\n        </form>\n        <div className=\"mb-4\">\n          <h1 className=\"text-center text-gray-700 text-xs\">o iniciar sesión en un clic</h1>\n          <div className=\"px-8 pt-6 pb-8 mb-4 md:flex md:space-x-4\">\n            <button\n              className=\"sm:block md:inline-block bg-gradient-to-r from-green-400 via-green-500 to-green-500 rounded w-full mt-5 p-2 capitalize hover:cursor-pointer\"\n              onClick={handleGoogleLogin}\n            >\n              <span className=\"text-white font-semibold\">Google</span>\n            </button>\n            <button\n              className=\"sm:block md:inline-block bg-gradient-to-r from-green-400 via-green-500 to-green-500 rounded w-full mt-5 p-2 capitalize hover:cursor-pointer\"\n              onClick={handleFacebookLogin}\n            >\n              <span className=\"text-white font-semibold\">Facebook</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","import React from 'react';\nimport { useForm } from '../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { setError, removeError } from '../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../actions/auth';\n\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const { msgError } = useSelector(state => state.ui);\n\n  const [formValues, handleInputChange] = useForm({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formValues;\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\n    }\n\n  }\n\n  const isFormValid = () => {\n\n    if (name.trim().length === 0) {\n      dispatch(setError('Nombre es requerido'))\n      return false;\n    } else if (!validator.isEmail(email)) {\n      dispatch(setError('Correo no es valido'))\n      return false;\n    } else if (password !== password2 || password.length < 5) {\n      dispatch(setError('Password debe tener al menos 6 caracteres'))\n      return false\n    }\n\n    dispatch(removeError());\n    return true;\n  }\n\n  return (\n    <div className=\"flex h-screen\">\n      <div className=\"w-full max-w-sm m-auto shadow-md\">\n        <h1 className=\"text-center text-2xl text-black font light\">Registrarse</h1>\n        <div className=\"flex justify-center mt-5\">\n          <div className=\"w-full max-w-sm\">\n            <form className=\"bg-white rounded shadow.md px-8 pt-6 pb-8 mb-4\" onSubmit={handleRegister}>\n              {\n                msgError &&\n                (\n                  <div className=\"\">\n                    { msgError}\n                  </div>\n                )\n              }\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-300 text-sm font-bold mb-2\" htmlFor=\"name\">\n                  Nombre\n              </label>\n                <input\n                  className=\"appearance-none border-0 border-b rounded-none border-gray-300 w-full py-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"name\"\n                  type=\"text\"\n                  placeholder=\"Ingrese nombre\"\n                  name=\"name\"\n                  autoComplete=\"off\"\n                  value={name}\n                  onChange={handleInputChange}\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-300 text-sm font-bold mb-2\" htmlFor=\"email\">\n                  Email\n              </label>\n                <input\n                  className=\"appearance-none border-0 border-b rounded-none border-gray-300 w-full py-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Ingrese email\"\n                  name=\"email\"\n                  autoComplete=\"off\"\n                  value={email}\n                  onChange={handleInputChange}\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-300 text-sm font-bold mb-2\" htmlFor=\"password\">\n                  Password\n              </label>\n                <input\n                  className=\"appearance-none border-0 border-b rounded-none border-gray-300 w-full py-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Ingrese password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={handleInputChange}\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-300 text-sm font-bold mb-2\" htmlFor=\"password\">\n                  Password\n              </label>\n                <input\n                  className=\"appearance-none border-0 border-b rounded-none border-gray-300 w-full py-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Confirmar password\"\n                  name=\"password2\"\n                  value={password2}\n                  onChange={handleInputChange}\n                />\n              </div>\n              <div className=\"mb-4\">\n                <input\n                  type=\"submit\"\n                  className=\"bg-gradient-to-r from-green-400 via-green-500 to-green-500 rounded w-full mt-5 p-2 text-white capitalize hover:cursor-pointer\"\n                  value=\"Registrarse\"\n                />\n              </div>\n              <Link\n                to=\"/auth/login\"\n                className=\"text-gray-700 text-xs underline\"\n              >\n                Iniciar Sesión\n            </Link>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Login from '../screens/Login';\nimport Register from '../screens/Register';\n\nconst RouteAuth = () => {\n  return (\n    <div className=\"\">\n      <div className=\"\">\n        <Switch>\n          <Route\n            exact\n            path=\"/auth/login\"\n            component={Login}\n          />\n\n          <Route\n            exact\n            path=\"/auth/register\"\n            component={Register}\n          />\n\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  )\n}\n\nexport default RouteAuth;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RoutePrivate = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nRoutePrivate.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n\nexport default RoutePrivate;","import { db } from '../configuration/firebase-config';\n\nexport const loadPlants = async ( uid ) => {\n\n    const plantsSnap = await db.collection(`${ uid }/admin/plants`).get();\n    const plants = [];\n\n    plantsSnap.forEach( snapChild => {\n        plants.push({\n            id: snapChild.id,\n            ...snapChild.data()\n        })\n    });\n    \n    return plants;\n}\n\n\n\n","\n\nexport const fileUpload = async ( file ) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dbaiu1pew/upload';\n    const formData = new FormData();\n    formData.append('upload_preset','react-plant');\n    formData.append('file', file );\n\n    try {\n        \n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            return null;\n        }\n\n    } catch (err) {\n        throw err;\n    }\n}","import Swal from 'sweetalert2';\n\nimport { db } from '../configuration/firebase-config';\nimport { types } from '../types/types';\nimport { loadPlants } from '../helpers/loadPlants';\nimport { fileUpload } from '../helpers/fileUpload';\n\n\nexport const startNewPlant = () => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n        \n        const newPlant = {\n            name: '',\n            description: '',\n            date: new Date().getTime()\n        }\n        \n        try {\n            const doc = await db.collection(`${ uid }/admin/plants`).add( newPlant );\n    \n            dispatch( activePlant( doc.id, newPlant ) );\n            dispatch( addNewPlant( doc.id, newPlant ) );\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n}\n\nexport const activePlant = ( id, plant ) => ({\n    type: types.plantsActive,\n    payload: {\n        id,\n        ...plant\n    }\n});\n\nexport const addNewPlant = ( id, plant ) => ({\n    type: types.plantsAddNew,\n    payload: {\n        id, \n        ...plant\n    }\n})\n\n\nexport const startLoadingPlants = ( uid ) => {\n    return async( dispatch ) => {\n        const plants = await loadPlants( uid );\n        dispatch( setPlants( plants ) );\n    }\n}\n\n\nexport const setPlants = ( plants ) => ({\n    type: types.plantsLoad,\n    payload: plants\n});\n\n\nexport const startSavePlant = ( plant ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        if ( !plant.url ){\n            delete plant.url;\n        }\n\n        const plantToFirestore = { ...plant };\n        delete plantToFirestore.id;\n\n        await db.doc(`${ uid }/admin/plants/${ plant.id }`).update( plantToFirestore );\n\n        dispatch( refreshPlant( plant.id, plantToFirestore ) );\n        Swal.fire('Guardado', plant.title, 'success');\n    }\n}\n\nexport const refreshPlant = ( id, plant ) => ({\n    type: types.plantsUpdated,\n    payload: {\n        id,\n        plant: {\n            id,\n            ...plant\n        }\n    }\n});\n\n\nexport const startUploading = ( file ) => {\n    return async( dispatch, getState ) => {\n\n        const { active:activePlant } = getState().plants;\n\n        Swal.fire({\n            title: 'Cargando...',\n            text: 'Espere...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n        console.log(fileUrl);\n        activePlant.url = fileUrl;\n\n        dispatch( startSavePlant( activePlant ) )\n        \n\n        Swal.close();\n    }\n}\n\n\nexport const startDeleting = ( id ) => {\n    return async( dispatch, getState ) => {\n         \n        const uid = getState().auth.uid;\n        await db.doc(`${ uid }/admin/plants/${ id }`).delete();\n\n        dispatch( deletePlant(id) );\n\n    }\n}\n\nexport const deletePlant = (id) => ({\n    type: types.plantsDelete,\n    payload: id\n});\n\n\nexport const plantLogout = () => ({\n    type: types.plantsLogoutCleaning\n});\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activePlant } from '../../actions/plants';\n\nconst Entry = ({ id, date, name, description, url }) => {\n\n    const plantDate = moment(date);\n    const dispatch = useDispatch();\n    const handleEntryClick = () => {\n        dispatch( \n            activePlant( id, {\n                date, name, description, url\n            })\n        );\n    }\n\n    return (\n        <div \n            className=\"flex justify-between bg-white rounded color-gray-700 my-2 overflow-hidden\"\n            onClick={ handleEntryClick }\n        >\n            \n            {\n                url &&\n                <div \n                    className=\"bg-cover w-full\"\n                    style={{\n                        backgroundImage: `url(${ url })`\n                    }}\n                ></div>\n            }\n\n            <div className=\"cursor-pointer p-2.5\">\n                <p className=\"font-bold text-sm\">\n                    { name }\n                </p>\n                <p className=\"text-xs\">\n                    { description }\n                </p>\n            </div>\n\n            <div className=\"flex justify-center flex-col p-1\">\n                <h4 className=\"font-bold\"> { plantDate.format('Do') } </h4>\n                <span className=\"capitalize\"> { plantDate.format('dddd') } </span>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Entry;","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport Entry from './Entry';\n\nconst Entries = (props) => {\n    const { plants } = useSelector( state  => state.plants );\n    return (\n        <div className=\"flex-auto px-4 py-2 overflow-auto\">\n            \n            {\n                plants.map( plant => (\n                    <Entry \n                        key={ plant.id }\n                        { ...plant }\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n\nexport default Entries;","export default __webpack_public_path__ + \"static/media/icon.e0f49691.png\";","import React, { useState} from 'react'\nimport { useDispatch } from 'react-redux';\nimport Entries from './Entries';\nimport { startLogout } from '../../actions/auth';\nimport { startNewPlant } from '../../actions/plants';\nimport Logo from '../../img/icon.png';\nimport { IoIosAddCircle } from \"react-icons/io\";\n\nconst Sidebar = () => {\n  \n  const dispatch = useDispatch();\n  const [showSideBar, setShowSidebar] = useState(true);\n\n  const hanleLogout = () => {\n    dispatch(startLogout())\n  }\n\n  const handleAddNew = () => {\n    setShowSidebar(!showSideBar)\n    dispatch(startNewPlant());\n  }\n  \n  const toggleSidebar = () => setShowSidebar(!showSideBar);\n  return (\n    <div class=\"md:w-2/6 md:relative\">\n      <div class=\"md:hidden flex justify-start bg-green-500 p-2 w-screen\">\n        <button class=\"mr-2 focus:b-0 bg-green-900 rounded\" aria-label=\"Open Menu\"  onClick={() => toggleSidebar()}>\n          <svg\n            fill=\"none\"\n            stroke=\"#fff\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            viewBox=\"0 0 24 24\"\n            class=\"w-8 h-6\"\n          >\n            <path d=\"M4 6h16M4 12h16M4 18h16\"></path>\n          </svg>\n        </button>\n        <img className=\"w-10 h-10 m-auto\" src={Logo} alt=\"App Plant\"></img>\n      </div>\n      <aside className={`md:h-full md:block md:flex w-full flex items-center flex-col justify-between bg-green-500 md:translate-x-0 z-50 transform ${\n          showSideBar\n            ? \"hidden -translate-x-full ease-in transition-medium\"\n            : \"block translate-x-0 ease-out transition-medium h-full\"\n        }`}>\n        <div>\n          <div\n            className=\"hidden md:block shadow-inner cursor-pointer transition duration-300 ease-in-out border-b-2 border-green-600\"\n          >\n            <img className=\"w-1/2 m-auto\" src={Logo} alt=\"App Plant\"></img>\n          </div>\n          <div\n            className=\"shadow-inner cursor-pointer px-2 transition duration-300 ease-in-out  border-b-2 border-green-600 w-screen md:w-full\"\n            onClick={handleAddNew}\n          >\n            <IoIosAddCircle className=\"inline-block m-2\" color=\"white\" />\n            <p className=\"inline-block my-1 text-white\">\n              Agregar planta\n            </p>\n          </div>\n          <div class=\"hidden md:block\">\n            <Entries />    \n          </div>\n        </div>\n        <button\n          className=\"w-5/6 btn shadow-inner bg-green-900 text-white px-4 py-2 mx-0 mb-2 outline-none focus:shadow-outline\"\n          onClick={hanleLogout}\n        >\n          Salir\n          </button>\n      </aside >\n    </div>\n  )\n}\n\nexport default Sidebar;","import React from 'react'\nimport { IoIosStar } from \"react-icons/io\";\n\nconst NothingSelected = () => {\n    return (\n        <div className=\"hidden md:block flex h-screen md:w-full w-4/5 m-auto\">\n            <div className=\"w-full max-w-sm m-auto shadow-md text-center\">\n                <p className=\"p-3 text-900-green weigth-3 text-center\">\n                    Seleccione una planta\n                </p>\n                <IoIosStar className=\"inline-block m-2\" color=\"rgba(16, 185, 129,1)\" size=\"50px\" />\n            </div>\n        </div>\n    )\n}\n\nexport default NothingSelected;","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { activePlant, startDeleting, startUploading, startSavePlant } from '../../actions/plants';\n\nconst Plant = () => {\n\n  const dispatch = useDispatch();\n  const { active:plant } = useSelector(state => state.plants);\n  \n  const [formValues, handleInputChange, reset] = useForm(plant);\n  const { description, name, id } = formValues;\n\n  const activeId = useRef(plant.id);\n\n  useEffect(() => {\n\n    if (plant.id !== activeId.current) {\n      reset(plant);\n      activeId.current = plant.id\n    }\n\n  }, [plant, reset])\n\n  useEffect(() => {\n\n    dispatch(activePlant(formValues.id, { ...formValues }));\n\n  }, [formValues, dispatch])\n\n  const handlePictureClick = () => {\n      document.querySelector('#fileSelector').click();\n  }\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUploading(file));\n    }\n  }\n\n  const handleDelete = () => {\n    dispatch(startDeleting(id));\n  }\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    dispatch(startSavePlant(plant));\n  }\n\n  return (\n    <div className=\"flex md:h-screen h-auto md:w-full w-4/5 m-auto flex-col\">\n\n      <div className=\"flex justify-end  bg-green-300 text-gray-700 px-2 py-4\">\n\n        <div className=\"space-x-4\">\n          <button\n            className=\"btn shadow-inner bg-green-900 text-white px-4 py-2 mx-0 mb-2 outline-none focus:shadow-outline\"\n            onClick={handleSave}\n          >\n            Guardar\n                </button>\n        </div>\n      </div>\n\n      <div className=\"flex flex-col md:h-full p-4 relative\">\n\n        <input\n          type=\"text\"\n          placeholder=\"Ingrese nombre de la planta\"\n          className=\"appearance-none border-0 border-b rounded-none border-gray-300 w-full py-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline md:pl-0 pl-2\"\n          autoComplete=\"off\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n        />\n\n        <textarea\n          placeholder=\"Ingrese descripción de la planta\"\n          className=\"appearance-none border-0 border-b rounded-none border-gray-300 w-full py-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline md:pl-0 pl-2\"\n          name=\"description\"\n          value={description}\n          onChange={handleInputChange}\n        ></textarea>\n        <div className=\"md:mt-8 mt-20\">\n          <input\n            id=\"fileSelector\"\n            type=\"file\"\n            name=\"file\"\n            style={{ display: 'none' }}\n            onChange={handleFileChange}\n          />\n          <button\n            className=\"btn shadow-inner bg-green-900 text-white px-4 py-2 mx-0 mb-2 outline-none focus:shadow-outline\"\n            onClick={handlePictureClick}\n          >\n            Cargar Imagen\n                    </button>\n        </div>\n        {\n          (plant.url)\n          && (\n            <div className=\"absolute bottom-0 md:w-96 w-42\">\n              <img\n                className=\"shadow\"\n                src={plant.url}\n                alt=\"imagen\"\n              />\n            </div>\n          )\n        }\n\n\n      </div>\n      <button\n        className=\"btn shadow-inner bg-red-400 text-white px-4 py-2 m-4 mb-2 outline-none focus:shadow-outline\"\n        onClick={handleDelete}\n      >\n        Eliminar\n            </button>\n\n    </div>\n  )\n}\n\nexport default Plant;","import React from 'react';\nimport Sidebar from '../components/administration/Sidebar';\nimport NothingSelected from '../components/administration/NothingSelected';\nimport Plant from '../components/plant/Plant';\nimport Entries from '../components/administration/Entries';\nimport { useSelector } from 'react-redux';\nconst Administration = () => {\n\n  const { active } = useSelector( state => state.plants) ;\n\n  return (\n    <div className=\"flex flex-col md:flex-row relative\">\n      <Sidebar/>\n      <main className=\"md:w-4/6 w-full\">\n        <div class=\"md:block md:bg-white bg-green-300\">\n          {(active)\n            ? (<Plant />)\n            : (<NothingSelected />)\n          }\n        </div>\n        <div class=\"md:hidden p-5\">\n          <h1 class=\"font-bold\">List Plants</h1>\n          <Entries/>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Administration;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RoutePublic = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nRoutePublic.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n\nexport default RoutePublic;","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\nimport { firebase } from '../configuration/firebase-config'\nimport RouteAuth from './RouteAuth';\nimport RoutePrivate from './RoutePrivate';\n\nimport Administration from '../screens/Administration';\nimport { login } from '../actions/auth';\nimport RoutePublic from './RoutePublic';\nimport { startLoadingPlants } from '../actions/plants';\n\nconst RouteApp = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged( (user) => {\n            if ( user?.uid ) {\n                dispatch( login( user.uid, user.displayName ) );\n                setIsLoggedIn( true );\n                dispatch( startLoadingPlants( user.uid ) );\n            } else {\n                setIsLoggedIn( false );\n            }\n            setChecking(false);\n        });\n    }, [ dispatch, setChecking, setIsLoggedIn ])\n\n\n    if ( checking ) {\n        return (\n            <h1>Espere...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <RoutePublic \n                        path=\"/auth\"\n                        component={ RouteAuth }\n                        isAuthenticated={ isLoggedIn }\n                    />\n                    <RoutePrivate \n                        exact\n                        isAuthenticated={ isLoggedIn }\n                        path=\"/\"\n                        component={ Administration }\n                    />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default RouteApp;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nimport RouteApp from './routers/RouteApp';\n\nconst App = () => {\n  return (\n    <Provider store = { store }>\n      <RouteApp/>\n    </Provider>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}